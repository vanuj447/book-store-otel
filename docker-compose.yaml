version: "3.8"

services:
  # ──────────────────────────────────────
  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookstore
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"

  # ──────────────────────────────────────
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: postgres://postgres:password@postgres-db:5432/bookstore?sslmode=disable
    depends_on:
      - postgres-db
    ports:
      - "9187:9187"
    volumes:
      - ./postgres_exporter.yml:/postgres_exporter.yml:ro

  # ──────────────────────────────────────
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"

  # ──────────────────────────────────────
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
      - loki
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  # ──────────────────────────────────────
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-data/wal:/loki/wal
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data/chunks:/loki/chunks
      - ./loki-data/tsdb-index:/loki/tsdb-index
      - ./loki-data/tsdb-cache:/loki/tsdb-cache
      - ./loki-data/compactor:/loki/compactor
    command: -config.file=/etc/loki/local-config.yaml
  # ──────────────────────────────────────
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail-config.yaml:/etc/promtail/promtail.yaml:ro
      - ./logs:/bookstore-logs
    command: -config.file=/etc/promtail/promtail.yaml

  # ──────────────────────────────────────
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml:ro
      - tempo-data:/tmp/tempo/traces
    command: -config.file=/etc/tempo.yaml
    ports:
      - "3200:3200"   # Tempo UI"  
      - "9095:9095"   # gRPC internal

  # ──────────────────────────────────────
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    depends_on:
      - tempo
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol/otel-collector-config.yaml:ro
    command: --config=/etc/otelcol/otel-collector-config.yaml
    ports:
      - "4317:4317"
      #- "4318:4318"
      - "8889:8889"   # Prometheus scrape endpoint

  # ──────────────────────────────────────
  bookstore-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bookstore-app
    depends_on:
      - postgres-db
      - otel-collector
    ports:
      - "3001:3001"
    environment:
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: bookstore
    volumes:
      - ./logs:/usr/src/app/logs

volumes:
  postgres-data:

  tempo-data:
   # driver: local
   # driver_opts:
     # type: none
     # device: ${PWD}/data/tempo
     # o: bind

  #loki-data:
    #driver: local
    #driver_opts:
      #type: none
      #device: ${PWD}/loki-data
      #o: bind
